kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: workshopctl
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: workshopctl
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: traefik-cfg
  namespace: workshopctl
  labels:
    app: traefik
data:
  traefik.toml: |
    debug = true
    logLevel = "DEBUG"
    # Traefik should be able to access the kubernetes-dashboard over HTTPS without having to trust the dashboard's self-signed cert 
    insecureSkipVerify = true
    defaultEntryPoints = ["http", "https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
        [entryPoints.http.redirect]
        entryPoint = "https"
      [entryPoints.https]
      address = ":443"
      [entryPoints.https.tls]
      [entryPoints.api]
      address = ":8080"
    [acme]
    email = "luxas@luxaslabs.com"
    # Move to use etcd or a PV as the backing Let's Encrypt store
    storage = "/letsencrypt/acme.json"
    onHostRule = true
    entryPoint = "https"
    [acme.httpChallenge]
      entryPoint = "http"
    # Enable the kubernetes integration
    [kubernetes]
    [kubernetes.ingressEndpoint]
    publishedService = "workshopctl/traefik"
    # Enable the traefik API on port 8080
    [api]
    entryPoint = "api"
    dashboard = true
    debug = true
    # Enable the /metrics endpoint
    [api.statistics]
    [ping]
    entryPoint = "api"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: workshopctl
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v1.7.18-alpine
        name: traefik
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        args:
        - --configfile=/etc/traefik/traefik.toml
        volumeMounts:
        - name: traefik-cfg
          mountPath: /etc/traefik/
        - name: letsencrypt
          mountPath: /letsencrypt
      volumes:
      - name: traefik-cfg
        configMap:
          name: traefik-cfg
      - name: letsencrypt
        hostPath:
          path: /tmp/traefik
---
kind: Service
apiVersion: v1
metadata:
  name: traefik
  namespace: workshopctl
spec:
  selector:
    app: traefik
  ports:
  - port: 80
    name: http
  - port: 443
    name: https
  type: LoadBalancer
